# Plan Terraform - uses the following ...
# https://marketplace.visualstudio.com/items?itemName=charleszipp.azure-pipelines-tasks-terraform
# Will set some variables to trigger a terraform apply automatically
# if there are just changes or ask for approval if there are any
# resources which are being destroyed
######################################################################

jobs:
  - job: "TerraformJobs"
    displayName: "Terraform > install, init & plan"
    steps:
      - template: ../steps/terraform-init.yml

      - task: TerraformCLI@0
        inputs:
          command: "plan"
          workingDirectory: $(System.DefaultWorkingDirectory)/infra/src
          environmentServiceName: "$(azure_subscription_connection)"
          publishPlanResults: "PlanResults"
          commandOptions: "-out=$(System.DefaultWorkingDirectory)/terraform.tfplan -detailed-exitcode"
        name: "plan"
        displayName: "Run > terraform plan"

      - task: TerraformCLI@0
        inputs:
          command: "show"
          workingDirectory: $(System.DefaultWorkingDirectory)/infra/src
          environmentServiceName: "$(azure_subscription_connection)"
          inputTargetPlanOrStateFilePath: "$(System.DefaultWorkingDirectory)/terraform.tfplan"
        displayName: "Run > terraform show"

      - bash: |
          if [ "$TERRAFORM_PLAN_HAS_CHANGES" = true ] && [ "$TERRAFORM_PLAN_HAS_DESTROY_CHANGES" = false ] ; then
            echo "##vso[task.setvariable variable=HAS_CHANGES_ONLY;isOutput=true]true"
            echo "##vso[task.logissue type=warning]👍 - Changes with no destroys detected, it is safe for the pipeline to proceed automatically"
            fi
          if [ "$TERRAFORM_PLAN_HAS_CHANGES" = true ] && [ "$TERRAFORM_PLAN_HAS_DESTROY_CHANGES" = true ] ; then
            echo "##vso[task.setvariable variable=HAS_DESTROY_CHANGES;isOutput=true]true"
            echo "##vso[task.logissue type=warning]⛔️ - Changes with Destroy or Cost increase, pipeline will require a manual approval to proceed"
          fi
          if [ "$TERRAFORM_PLAN_HAS_CHANGES" != true ] ; then
            echo "##vso[task.logissue type=warning]ℹ️ - No changes detected, terraform apply will not run"
          fi
        name: "setvar"
        displayName: "Vars > Set Variables for next stage"
